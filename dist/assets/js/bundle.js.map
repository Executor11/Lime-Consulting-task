{"version":3,"file":"bundle.js","mappings":";wXAQqBA,EAAAA,WACnB,0GAAc,SACZC,KAAKC,OAAS,IAAIC,EAAAA,QAClBF,KAAKG,OAAS,IAAIC,EAAAA,QAElBJ,KAAKK,MAAQ,EACbL,KAAKM,SAAU,4CAUjB,SAAMC,EAAQC,GAAU,WAElBC,GACD,GAAwB,GAAhB,GAAMF,GAAcG,KAAKC,GAAMX,KAAKC,OAAOW,SAASC,OAC3DC,EACFd,KAAKK,MACoC,EAAzCK,KAAKK,MAAMf,KAAKK,OAAS,EAAIK,KAAKC,KAAWD,KAAKC,GAClD,GAAQD,KAAKC,GAGXK,EAAQC,YAAYC,MAoBxBC,uBAhBe,SAATC,IACJ,IAAIF,EAAMD,YAAYC,MAGlBG,EAAIX,KAAKY,IAAI,GAAIJ,EAAMF,GAASR,GAEpCa,EAAI,EAAIA,EAAIA,EAAI,EAAIA,EAAIA,EAAIA,EAC5B,EAAKhB,MAAQS,EAAcO,GAAKZ,EAAcK,GAG9C,EAAKX,OAAOoB,OAAO,EAAKlB,OAEpBgB,EAAI,EAAGF,sBAAsBC,GAC5B,EAAKd,SAAU,KAItBN,KAAKM,SAAU,0BA/CEP,4FCRAG,EACnB,0GAAc,SAEZF,KAAKwB,OAASC,SAASC,cAAc,WACrC1B,KAAK2B,WAAa,IAClB3B,KAAK4B,YAAc,IAGnB5B,KAAKQ,SAAW,IAIhBR,KAAKY,SAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1CZ,KAAK6B,OAAS,CACZ,uBACA,wBACA,sBACA,uBACA,sBACA,WAEF7B,KAAK8B,UAAY,IAGjB9B,KAAK+B,OAAS,GAGd/B,KAAKgC,OAAUtB,KAAKY,IAAItB,KAAK2B,WAAY3B,KAAK4B,aAAe,KAAQ,uTCzBpDxB,EAAAA,WACnB,0GAAc,SAEZJ,KAAKC,OAAS,IAAIC,EAAAA,mDAOpB,WAAkB,IAAXG,EAAW,uDAAH,EACb,IAAKL,KAAKC,OAAO8B,OAAOlB,OAEtB,IACE,IAAIoB,EAAW,EACfA,EAAWjC,KAAKC,OAAOW,SAASC,OAChCoB,IACA,CAGA,IAAIC,EAAYT,SAASU,cAAc,UACvCD,EAAUE,MAAQF,EAAUG,OAAS,EAAIrC,KAAKC,OAAO+B,OAAS,GAE9D,IAAIM,EAAUJ,EAAUK,WAAW,MACjCC,EAAW,EAAIxC,KAAKC,OAAO+B,OAC3BS,EAAW,EAAIzC,KAAKC,OAAO+B,OAGzBU,EAAWJ,EAAQK,qBACrBH,EACAC,EACA,EACAD,EACAC,EACAzC,KAAKC,OAAO+B,QAGdU,EAASE,aAAa,EAAG,iBACzBF,EAASE,aAAa,EAAG,mBAEzB,IAAK,IAAIC,EAAI,EAAGA,EAAI7C,KAAKC,OAAOW,SAASC,OAAQgC,IAAK,CAEpD,IAAIC,EAAc,EAAIpC,KAAKC,GAAKkC,EAAK7C,KAAKC,OAAOW,SAASC,OACtDkC,EACFD,EACC,EAAIpC,KAAKC,IAAY,GAALkC,EAAS,EAAI7C,KAAKC,OAAOW,SAASC,QAEjDmC,EACD,EAAItC,KAAKC,IAAMkC,EAAI,IAAQ7C,KAAKC,OAAOW,SAASC,OAGnDyB,EAAQW,YACRX,EAAQY,OAAOV,EAAUC,GACzBH,EAAQa,IACNX,EACAC,EACAzC,KAAKC,OAAO+B,OACZc,EACAC,GAIFT,EAAQc,UAAYpD,KAAKC,OAAO4B,OAAOgB,EAAI7C,KAAKC,OAAO4B,OAAOhB,QAC9DyB,EAAQe,OACRf,EAAQc,UAAYV,EACpBJ,EAAQe,OACRf,EAAQgB,OAGJT,GAAKZ,GACPK,EAAQc,UAAY,OACpBd,EAAQiB,YAAc,OACtBjB,EAAQkB,WAAaxD,KAAKC,OAAO+B,OAAS,KAE1CM,EAAQc,UAAY,OACpBd,EAAQiB,YAAc,OACtBjB,EAAQkB,WAAaxD,KAAKC,OAAO+B,OAAS,KAO5CM,EAAQmB,KACN,QACCzD,KAAKC,OAAO+B,OAAShC,KAAKC,OAAOW,SAASC,OACzCb,KAAKC,OAAO6B,UACd,gBAGFQ,EAAQU,UAAY,SACpBV,EAAQoB,aAAe,SAGvBpB,EAAQqB,UAAUnB,EAAUC,GAC5BH,EAAQsB,OAAOZ,GACfV,EAAQuB,SACN7D,KAAKC,OAAOW,SAASiC,GACA,IAArB7C,KAAKC,OAAO+B,OACZ,GAGFM,EAAQwB,UAGV9D,KAAKC,OAAO8B,OAAOgC,KAAK7B,GAM5BlC,KAAKC,OAAOuB,OAAOY,MAAQpC,KAAKC,OAAO0B,WACvC3B,KAAKC,OAAOuB,OAAOa,OAASrC,KAAKC,OAAO2B,YACxC,IAAIY,EAAWxC,KAAKC,OAAO0B,WAAa,EACtCc,EAAWzC,KAAKC,OAAO2B,YAAc,EAEnCoC,EAAahE,KAAKC,OAAOuB,OAAOe,WAAW,MAC3CN,EACFvB,KAAKK,QACA,GAAMV,GAASL,KAAKC,OAAOW,SAASC,QAAW,EAAIH,KAAKC,KACzDX,KAAKC,OAAOW,SAASC,OACvBoB,EAAW,IAAGA,GAAYjC,KAAKC,OAAOW,SAASC,QACnDmD,EAAWV,OAGXU,EAAWL,UAAUnB,EAAUC,GAG/BuB,EAAWJ,OAAOvD,GAElB2D,EAAWL,WACR3D,KAAKC,OAAO8B,OAAOE,GAAUG,MAAQ,GACrCpC,KAAKC,OAAO8B,OAAOE,GAAUI,OAAS,GAGzC2B,EAAWC,UAAUjE,KAAKC,OAAO8B,OAAOE,GAAW,EAAG,GACtD+B,EAAWF,kCAxIM1D,KCDjB8D,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,QCpBfJ,EAAoBO,EAAI,CAACH,EAASI,KACjC,IAAI,IAAIC,KAAOD,EACXR,EAAoBU,EAAEF,EAAYC,KAAST,EAAoBU,EAAEN,EAASK,IAC5EE,OAAOC,eAAeR,EAASK,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ET,EAAoBU,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFhB,EAAoBoB,EAAKhB,IACH,oBAAXiB,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAeR,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DZ,OAAOC,eAAeR,EAAS,aAAc,CAAEmB,OAAO,4KCAjDC,EAAQ,IAAI5F,EAAAA,QACZE,EAAS,IAAIC,EAAAA,QACbC,EAAS,IAAIC,EAAAA,QAEnBwF,OAAOC,OAAS,WAEd1F,EAAOoB,SAEP,IAAMuE,EAAUrE,SAASC,cAAc,iBACjCqE,EAAYtE,SAASC,cAAc,mBAEnCsE,EAAQvE,SAASC,cAAc,UAC/BuE,EAAgBxE,SAASC,cAAc,wBACvCwE,EAAWzE,SAASC,cAAc,oBAElCyE,EAAW1E,SAASC,cAAc,qBAclC0E,EAAY,WAChBJ,EAAMK,UAAUC,IAAI,iBACpBJ,EAASG,UAAUC,IAAI,kBAInBC,EAAa,WACjB,IAAKZ,EAAMrF,QAAS,CAClB,IAAMkG,EAAe9F,KAAK+F,SAAWxG,EAAOW,SAASC,OAAU,EAE/D8E,EAAM3E,MAAMwF,EAAavG,EAAOO,UAnBlBkG,EAqBJF,EApBZG,YAAW,WACTX,EAAMK,UAAUO,OAAO,iBACvBV,EAASG,UAAUO,OAAO,iBAE1BT,EAASU,YAAc5G,EAAOW,SAAS8F,KACtCzG,EAAOO,UANM,IAAAkG,GA0BlBZ,EAAQgB,iBAAiB,QAASP,GAGlCR,EAAUe,iBAAiB,SAAS,WAClCV,IACAG,OAGFN,EAAca,iBAAiB,QAASV","sources":["webpack://fortune-wheel/./src/assets/scripts/wheel/Wheel.js","webpack://fortune-wheel/./src/assets/scripts/wheel/WheelConfig.js","webpack://fortune-wheel/./src/assets/scripts/wheel/WheelSprite.js","webpack://fortune-wheel/webpack/bootstrap","webpack://fortune-wheel/webpack/runtime/define property getters","webpack://fortune-wheel/webpack/runtime/hasOwnProperty shorthand","webpack://fortune-wheel/webpack/runtime/make namespace object","webpack://fortune-wheel/./src/assets/scripts/main.js"],"sourcesContent":["import WheelConfig from \"./WheelConfig.js\";\r\nimport WheelSprite from \"./WheelSprite.js\";\r\n\r\n/**\r\n * @description class для управления колесом фортуны\r\n *\r\n * включает методы: start(winner: number, duration: number)\r\n */\r\nexport default class Wheel {\r\n  constructor() {\r\n    this.config = new WheelConfig();\r\n    this.sprite = new WheelSprite();\r\n\r\n    this.angle = 0;\r\n    this.running = false;\r\n    // this.sprite.render(this.angle);\r\n  }\r\n\r\n  //  функция которая определяет вращение\r\n  /**\r\n   * @description функция для начала вращения колеса фортуны\r\n   * @param {number} winner определяет победителя и крутится до этого значения\r\n   * @param {number} duration определяет скорость и длительность вращения\r\n   */\r\n  start(winner, duration) {\r\n    // расчет выигрышной позиции\r\n    let final_angle =\r\n      -0.3 - ((0.5 + winner) * 2 * Math.PI) / this.config.sections.length;\r\n    let start_angle =\r\n      this.angle -\r\n      Math.floor(this.angle / (2 * Math.PI)) * 2 * Math.PI -\r\n      5 * 2 * Math.PI;\r\n\r\n    //\r\n    let start = performance.now();\r\n\r\n    // update view обновление кадров\r\n    //animation анимация вращения\r\n    const update = () => {\r\n      let now = performance.now();\r\n\r\n      //transition плавность вращения\r\n      let t = Math.min(1, (now - start) / duration);\r\n      // обеспечивает вращение тип transition: ease-in-out\r\n      t = 3 * t * t - 2 * t * t * t;\r\n      this.angle = start_angle + t * (final_angle - start_angle);\r\n\r\n      // отрисовка спрайта во время вращения\r\n      this.sprite.render(this.angle);\r\n\r\n      if (t < 1) requestAnimationFrame(update);\r\n      else this.running = false;\r\n    };\r\n    // рекурсивное вращение\r\n    requestAnimationFrame(update);\r\n    this.running = true;\r\n  }\r\n}\r\n","export default class WheelConfig {\r\n  constructor() {\r\n    //основные настройки canvas  ширина высота элемент\r\n    this.canvas = document.querySelector(\".canvas\");\r\n    this.innerWidth = 500;\r\n    this.innerHeight = 500;\r\n\r\n    // длительность в миллисекундах сколько будет крутиться колесо, особенность чем дольше крутится тем больше замедляется\r\n    this.duration = 3000;\r\n\r\n    // основные настройки значений и цвета, можно использовать любые значения,\r\n    // желательно не очень длинные иначе придется редактировать размер текста, хотя\r\n    this.sections = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"];\r\n    this.colors = [\r\n      \"rgba(13, 31, 241, 1)\",\r\n      \"rgba(13, 255, 203, 1)\",\r\n      \"rgba(0, 255, 29, 1)\",\r\n      \"rgba(241, 255, 0, 1)\",\r\n      \"rgba(242, 6, 6, 1) \",\r\n      \"#FF00B1\",\r\n    ];\r\n    this.font_size = 1.5;\r\n\r\n    // контейнер для спрайтов\r\n    this.wheels = [];\r\n\r\n    //расчет радиуса для определения правильной точки для центрирования колеса\r\n    this.radius = (Math.min(this.innerWidth, this.innerHeight) / 2.25) | 0;\r\n  }\r\n}\r\n","import WheelConfig from \"./WheelConfig.js\";\r\n\r\nexport default class WheelSprite {\r\n  constructor() {\r\n    // конфиг с настройками и важной информацией для отрисовки\r\n    this.config = new WheelConfig();\r\n  }\r\n\r\n  /**\r\n   * @description render метод отрисовки для canvas\r\n   * @param {number} angle принимает в качестве параметра угол в радианах\r\n   */\r\n  render(angle = 0) {\r\n    if (!this.config.wheels.length) {\r\n      // создаем новые элементы которые будут расчитываться от колличества sections[]\r\n      for (\r\n        let selected = 0;\r\n        selected < this.config.sections.length;\r\n        selected++\r\n      ) {\r\n        // создаем canvas для каждого элемента\r\n\r\n        let newCanvas = document.createElement(\"canvas\");\r\n        newCanvas.width = newCanvas.height = 2 * this.config.radius + 10;\r\n\r\n        let context = newCanvas.getContext(\"2d\"),\r\n          contextX = 5 + this.config.radius,\r\n          contextY = 5 + this.config.radius;\r\n\r\n        // градиент для более правдоподобного вида в виде теней\r\n        let gradient = context.createRadialGradient(\r\n          contextX,\r\n          contextY,\r\n          0,\r\n          contextX,\r\n          contextY,\r\n          this.config.radius\r\n        );\r\n        // цвета основные для тени\r\n        gradient.addColorStop(0, \"rgba(0,0,0,0)\");\r\n        gradient.addColorStop(1, \"rgba(0,0,0,0.1)\");\r\n        //\r\n        for (let i = 0; i < this.config.sections.length; i++) {\r\n          // начальная и конечная точка грубо говоря 1 радиан при 6 значениях\r\n          let startPoint = (2 * Math.PI * i) / this.config.sections.length;\r\n          let endPoint =\r\n            startPoint +\r\n            (2 * Math.PI) / (i == 0 ? 1 : this.config.sections.length);\r\n          // расчитывает правильное местонахождение текста при вращении\r\n          let textAlign =\r\n            (2 * Math.PI * (i + 0.5)) / this.config.sections.length;\r\n\r\n          // сами кусочки пирога\r\n          context.beginPath();\r\n          context.moveTo(contextX, contextY);\r\n          context.arc(\r\n            contextX,\r\n            contextY,\r\n            this.config.radius,\r\n            startPoint,\r\n            endPoint\r\n          );\r\n\r\n          // разделение цветов и окраска\r\n          context.fillStyle = this.config.colors[i % this.config.colors.length];\r\n          context.fill();\r\n          context.fillStyle = gradient;\r\n          context.fill();\r\n          context.save();\r\n\r\n          // проверка элемента на выбраного, ну и его подсветка в случае если он попадает в ту зону визуал\r\n          if (i == selected) {\r\n            context.fillStyle = \"#FFF\";\r\n            context.shadowColor = \"#FFF\";\r\n            context.shadowBlur = this.config.radius / 20;\r\n          } else {\r\n            context.fillStyle = \"#AAA\";\r\n            context.shadowColor = \"#000\";\r\n            context.shadowBlur = this.config.radius / 100;\r\n          }\r\n\r\n          // настройки текста\r\n\r\n          // размер текста можно поиграться с font_size переменной в config\r\n\r\n          context.font =\r\n            \"bold \" +\r\n            (this.config.radius / this.config.sections.length) *\r\n              this.config.font_size +\r\n            \"px sans-serif\";\r\n\r\n          // расположение текста по вертикали от центра,  меняем center-left-rigth и тд\r\n          context.textAlign = \"center\";\r\n          context.textBaseline = \"middle\";\r\n\r\n          // вращение вместе с элементом\r\n          context.translate(contextX, contextY);\r\n          context.rotate(textAlign);\r\n          context.fillText(\r\n            this.config.sections[i],\r\n            this.config.radius * 0.62,\r\n            0\r\n          );\r\n\r\n          context.restore();\r\n        }\r\n\r\n        this.config.wheels.push(newCanvas);\r\n      }\r\n    }\r\n\r\n    // основная реализация метода свечения и отрисоки канваса\r\n    // размеры\r\n    this.config.canvas.width = this.config.innerWidth;\r\n    this.config.canvas.height = this.config.innerHeight;\r\n    let contextX = this.config.innerWidth / 2,\r\n      contextY = this.config.innerHeight / 2;\r\n\r\n    let imgContext = this.config.canvas.getContext(\"2d\");\r\n    let selected =\r\n      Math.floor(\r\n        ((-0.2 - angle) * this.config.sections.length) / (2 * Math.PI)\r\n      ) % this.config.sections.length;\r\n    if (selected < 0) selected += this.config.sections.length;\r\n    imgContext.save();\r\n    // два translate между rotate нужно для выравнивания колеса иначе оно будет вокруг своей оси крутиться\r\n    // #1\r\n    imgContext.translate(contextX, contextY);\r\n\r\n    // главное вращение если убрать будет просто светлая часть на тексте крутиться\r\n    imgContext.rotate(angle);\r\n    // #2\r\n    imgContext.translate(\r\n      -this.config.wheels[selected].width / 2,\r\n      -this.config.wheels[selected].height / 2\r\n    );\r\n    // отрисовка как изображение\r\n    imgContext.drawImage(this.config.wheels[selected], 0, 0);\r\n    imgContext.restore();\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// подключение модулей\r\nimport Wheel from \"./wheel/Wheel.js\";\r\nimport WheelConfig from \"./wheel/WheelConfig.js\";\r\nimport WheelSprite from \"./wheel/WheelSprite.js\";\r\n\r\nconst wheel = new Wheel();\r\nconst config = new WheelConfig();\r\nconst sprite = new WheelSprite();\r\n\r\nwindow.onload = () => {\r\n  // при загрузке страницы рисуется и колесо!!!\r\n  sprite.render();\r\n  // переменные\r\n  const spinBtn = document.querySelector(\".button__spin\");\r\n  const respinBtn = document.querySelector(\".button__respin\");\r\n\r\n  const popup = document.querySelector(\".popup\");\r\n  const popupCloseBtn = document.querySelector(\".popup__header_close\");\r\n  const backdrop = document.querySelector(\".popup__backdrop\");\r\n\r\n  const winField = document.querySelector(\".wheel-win-number\");\r\n\r\n  // func\r\n\r\n  // открытие модального окна и присваивание значения\r\n  const showPopup = win => {\r\n    setTimeout(() => {\r\n      popup.classList.remove(\"popup__hidden\");\r\n      backdrop.classList.remove(\"popup__hidden\");\r\n\r\n      winField.textContent = config.sections[win];\r\n    }, config.duration);\r\n  };\r\n  // закрытие модального окна\r\n  const hidePopup = () => {\r\n    popup.classList.add(\"popup__hidden\");\r\n    backdrop.classList.add(\"popup__hidden\");\r\n  };\r\n\r\n  // начало прокрутки колеса\r\n  const startWheel = () => {\r\n    if (!wheel.running) {\r\n      const winPosition = (Math.random() * config.sections.length) | 0;\r\n\r\n      wheel.start(winPosition, config.duration);\r\n\r\n      showPopup(winPosition);\r\n    }\r\n  };\r\n\r\n  // основная кнопка прокрутки\r\n  spinBtn.addEventListener(\"click\", startWheel);\r\n\r\n  // кнопка модального окна\r\n  respinBtn.addEventListener(\"click\", () => {\r\n    hidePopup();\r\n    startWheel();\r\n  });\r\n  // закрытие модального окна\r\n  popupCloseBtn.addEventListener(\"click\", hidePopup);\r\n};\r\n"],"names":["Wheel","this","config","WheelConfig","sprite","WheelSprite","angle","running","winner","duration","final_angle","Math","PI","sections","length","start_angle","floor","start","performance","now","requestAnimationFrame","update","t","min","render","canvas","document","querySelector","innerWidth","innerHeight","colors","font_size","wheels","radius","selected","newCanvas","createElement","width","height","context","getContext","contextX","contextY","gradient","createRadialGradient","addColorStop","i","startPoint","endPoint","textAlign","beginPath","moveTo","arc","fillStyle","fill","save","shadowColor","shadowBlur","font","textBaseline","translate","rotate","fillText","restore","push","imgContext","drawImage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","wheel","window","onload","spinBtn","respinBtn","popup","popupCloseBtn","backdrop","winField","hidePopup","classList","add","startWheel","winPosition","random","win","setTimeout","remove","textContent","addEventListener"],"sourceRoot":""}